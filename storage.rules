rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper functions for admin checking
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isSignedIn() && 
             (request.auth.token.get('admin', false) == true || 
              request.auth.token.get('isAdmin', false) == true ||
              // Fallback to Firestore-based admin check
              firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.get('isAdmin', false) == true);
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    // Color Story hero images - Public read, Admin-only write
    match /story_heroes/{heroImageId} {
      allow read: if true; // Public read access for displaying hero images
      allow write: if isAdmin(); // Only admins can upload/modify hero images
    }
    
    // Color Story hero images (alternative path)
    match /color_stories/heroes/{heroImageId} {
      allow read: if true; // Public read access
      allow write: if isAdmin() || request.auth.uid == null; // Admin or Functions service account
    }
    
    // v3: Color Story ambient audio - Public read, Functions write
    match /color_stories/audio/{storyId}.mp3 {
      allow read: if true; // Public read access for ambient audio
      allow write: if isAdmin() || request.auth.uid == null; // Admin or Functions service account
    }
    
    // v3: Color Story TTS narration - Public read, Functions write  
    match /color_stories/tts/{storyId}.mp3 {
      allow read: if true; // Public read access for TTS narration
      allow write: if isAdmin() || request.auth.uid == null; // Admin or Functions service account
    }
    
    // User-generated content (palette exports, visualizer screenshots)
    match /user_content/{userId}/{allPaths=**} {
      allow read: if true; // Public read for sharing
      allow write: if isOwner(userId); // Users can manage their own content
    }
    
    // Palette exports - Public read, authenticated write
    match /palette_exports/{allPaths=**} {
      allow read: if true; // Public read for sharing
      allow write: if isSignedIn(); // Authenticated users can export palettes
    }
    
    // Visualizer screenshots - Owner read/write
    match /visualizer_screenshots/{userId}/{allPaths=**} {
      allow read: if true; // Public read for sharing
      allow write: if isOwner(userId); // Users can save their own screenshots
    }
    
    // Visualizer AI-generated content - User-scoped access
    match /visualizer/{uid}/{allPaths=**} {
      allow read: if isSignedIn() && request.auth.uid == uid;
      allow write: if isSignedIn() && request.auth.uid == uid;
    }
    
    // Admin content - Admin-only access
    match /admin/{allPaths=**} {
      allow read, write: if isAdmin(); // Only admins can access admin content
    }
    
    // Data imports - Admin-only access  
    match /data_imports/{allPaths=**} {
      allow read, write: if isAdmin(); // Only admins can upload data files
    }
    
    // Default deny for any other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}